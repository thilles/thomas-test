name: Splunk Package, Vet and app
on: [push]
jobs:
  Package-and-Inspect-app:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      
      - name: Download and install Splunk Packaging Toolkit (SLIM)
        run: |
          wget https://download.splunk.com/misc/packaging-toolkit/splunk-packaging-toolkit-1.0.1.tar.gz
          pip install splunk-packaging-toolkit-1.0.1.tar.gz

      - name: Generate app manifest
        run: |
          slim generate-manifest TA-app -o TA-app/app.manifest

      - name: Package app
        id: appname
        run: |
          mkdir tmp && slim package TA-app --output-dir=tmp
          echo "BUILDPKG=$(basename tmp/*tar.gz)" >> $GITHUB_ENV
          echo "APP_VERSION=$(echo $(basename tmp/*tar.gz) | grep --perl-regexp '\d\.\d\.\d' --only-matching)" >> $GITHUB_ENV
      
      - name: Splunk AppInspect Login
        id: splunklogin
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://api.splunk.com/2.0/rest/login/splunk'
          method: 'GET'
          username: ${{ secrets.SPLUNKBASE_USER }}
          password: ${{ secrets.SPLUNKBASE_PASSWORD }}

      - name: Get AppInspect Token
        run: |
          echo "SPLUNK_APPINSPECT_TOKEN=${{ fromJSON(steps.splunklogin.outputs.response).data.token }}" >> $GITHUB_ENV
      
#      - name: Show Response
#        run: echo ${{ env.SPLUNK_APPINSPECT_TOKEN }}
      
      - name: Setup python
        uses: actions/setup-python@v2
        
      - name: Run Splunk AppInspect 
        uses: jannekem/run-python-script-action@v1
        with:
          script: |
            import requests
            url = "https://appinspect.splunk.com/v1/app/validate"
            payload={'included_tags': 'cloud'}
            files=[('app_package',('TA-app-1.0.0.tar.gz',open('./tmp/${{ env.BUILDPKG }}','rb'),'application/octet-stream'))]
            headers = {
                'Authorization': 'bearer ${{ env.SPLUNK_APPINSPECT_TOKEN }}',
                'Content-Type': 'application/x-www-form-urlencoded'
            }
            response = requests.request("POST", url, headers=headers, data=payload, files=files)
            print(response.text)
#      - name: Bump app.conf build number 
#        uses: jannekem/run-python-script-action@v1
#        with:
#          script: |
#            import configparser
#            config = configparser.ConfigParser()
#            config.read('./TA-app/default/app.conf')
#            buildbump = int(config['install']['build']) + 1
#            config['install']['build'] = str(buildbump)
#            with open('./TA-app/default/app.conf', 'w') as configfile:
#                config.write(configfile)

#      - name: Run Splunk AppInspect
#        uses: fjogeleit/http-request-action@v1
#        with:
#          url: 'https://appinspect.splunk.com/v1/app/validate'
#          method: 'POST'
#          bearerToken: ${{ env.SPLUNK_APPINSPECT_TOKEN }}
#          file: ./tmp/${{ env.BUILDPKG }}



#        uses: splunk/appinspect-cli-action@v1.4.7-publish
#        with:
#          app_path: tmp/${{ env.BUILDPKG }}
#          included_tags: cloud
#        uses: splunk/appinspect-api-action@v2
#        with:
#            filePath: ./tmp/${{ env.BUILDPKG }}
#            splunkUser: ${{ secrets.SPLUNKBASE_USER }}
#            splunkPassword: ${{ secrets.SPLUNKBASE_PASSWORD }}
#            includedTags: cloud, private_app

#      - name: Release
#        uses: softprops/action-gh-release@v1
#        with:
#          files: ./tmp/*.tar.gz
#          name: "${{ env.BUILDPKG }}"
#          tag_name: v${{ env.APP_VERSION }}

